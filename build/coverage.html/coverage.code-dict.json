{"/home/travis/build/npmtest/node-npmtest-ember-i18n/test.js":"/* istanbul instrument in package npmtest_ember_i18n */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - post-init\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - post-init\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-ember-i18n/lib.npmtest_ember_i18n.js":"/* istanbul instrument in package npmtest_ember_i18n */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_ember_i18n = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_ember_i18n = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-ember-i18n/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-ember-i18n && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_ember_i18n */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_ember_i18n\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // post-init\n    // run browser js-env code - post-init\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_ember_i18n.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_ember_i18n.rollup.js'] =\n            local.assetsDict['/assets.npmtest_ember_i18n.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_ember_i18n.__dirname + '/lib.npmtest_ember_i18n.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-ember-i18n/node_modules/ember-i18n/index.js":"/* jshint node: true */\n'use strict';\nvar Funnel = require('broccoli-funnel');\nvar VersionChecker = require('ember-cli-version-checker');\n\nmodule.exports = {\n  name: 'ember-i18n',\n  isLocalizationFramework: true,\n\n  init() {\n    this._super.init && this._super.init.apply(this, arguments);\n\n    var checker = new VersionChecker(this);\n    var dep = checker.forEmber();\n    this.hasEmberHelper = !dep.lt('1.13.0');\n  },\n\n  treeFor(name) {\n    var result = this._super.treeFor.apply(this, arguments);\n\n    if (this.hasEmberHelper) {\n      result = exclude(result, [\n        'initializers/ember-i18n-legacy-helper.js',\n        'modules/ember-i18n/legacy/helper.js',\n        'modules/ember-i18n/legacy/initializer.js',\n        'modules/ember-i18n/legacy/stream.js'\n      ]);\n    } else {\n      result = exclude(result, [\n        'helpers/t.js',\n        'modules/ember-i18n/helper.js'\n      ]);\n    }\n\n    return result;\n  }\n};\n\nfunction exclude(tree, files) {\n  return new Funnel(tree, {\n    exclude: files\n  });\n}\n","/home/travis/build/npmtest/node-npmtest-ember-i18n/node_modules/ember-i18n/addon/helper.js":"import Ember from \"ember\";\n\nconst { get, inject, Helper, Object: EmberObject, observer } = Ember;\n\nfunction mergedContext(objectContext, hashContext) {\n  return EmberObject.extend({\n    unknownProperty(key) {\n      const fromHash = get(hashContext, key);\n      return fromHash === undefined ? get(objectContext, key) : fromHash;\n    }\n  }).create();\n}\n\nexport default Helper.extend({\n  i18n: inject.service(),\n\n  compute([key, contextObject = {}, ...rest], interpolations) {\n    const mergedInterpolations = mergedContext(contextObject, interpolations);\n\n    const i18n = get(this, 'i18n');\n    return i18n.t(key, mergedInterpolations);\n  },\n\n  _recomputeOnLocaleChange: observer('i18n.locale', function() {\n    this.recompute();\n  })\n});\n","/home/travis/build/npmtest/node-npmtest-ember-i18n/node_modules/ember-i18n/config/environment.js":"/*jshint node:true*/\n'use strict';\n\nmodule.exports = function(/* environment, appConfig */) {\n  return { };\n};\n","/home/travis/build/npmtest/node-npmtest-ember-i18n/node_modules/ember-i18n/addon/config/ar.js":"import { ZERO, ONE, TWO, FEW, MANY, OTHER } from './constants';\n\nexport default {\n  rtl: true,\n\n  pluralForm(n) {\n    const mod100 = n % 100;\n\n    if (n === 0) { return ZERO; }\n    if (n === 1) { return ONE; }\n    if (n === 2) { return TWO; }\n    if (mod100 >= 3 && mod100 <= 10) { return FEW; }\n    if (mod100 >= 11 && mod100 <= 99) { return MANY; }\n    return OTHER;\n  }\n};\n","/home/travis/build/npmtest/node-npmtest-ember-i18n/node_modules/ember-i18n/addon/config/bn.js":"import en from './en';\nexport default en;\n","/home/travis/build/npmtest/node-npmtest-ember-i18n/node_modules/ember-i18n/addon/config/constants.js":"export const ZERO  = 'zero';\nexport const ONE   = 'one';\nexport const TWO   = 'two';\nexport const FEW   = 'few';\nexport const MANY  = 'many';\nexport const OTHER = 'other';\n","/home/travis/build/npmtest/node-npmtest-ember-i18n/node_modules/ember-i18n/addon/config/de.js":"import en from './en';\nexport default en;\n","/home/travis/build/npmtest/node-npmtest-ember-i18n/node_modules/ember-i18n/addon/config/en.js":"import { ONE, OTHER } from \"./constants\";\n\nexport default {\n  rtl: false,\n\n  pluralForm(n) {\n    if (n === 1) { return ONE; }\n    return OTHER;\n  }\n};\n","/home/travis/build/npmtest/node-npmtest-ember-i18n/node_modules/ember-i18n/addon/config/es.js":"import en from './en';\nexport default en;\n","/home/travis/build/npmtest/node-npmtest-ember-i18n/node_modules/ember-i18n/addon/config/fa.js":"import zh from './zh';\nexport default zh;\n","/home/travis/build/npmtest/node-npmtest-ember-i18n/node_modules/ember-i18n/addon/config/fr.js":"import { ONE, OTHER } from \"./constants\";\n\nexport default {\n  rtl: false,\n\n  pluralForm(n) {\n    if (n >= 0 && n < 2) { return ONE; }\n    return OTHER;\n  }\n};\n","/home/travis/build/npmtest/node-npmtest-ember-i18n/node_modules/ember-i18n/addon/config/fy.js":"import en from './en';\nexport default en;\n","/home/travis/build/npmtest/node-npmtest-ember-i18n/node_modules/ember-i18n/addon/config/he.js":"import en from './en';\n\nexport default {\n  rtl: true,\n\n  pluralForm: en.pluralForm\n};\n","/home/travis/build/npmtest/node-npmtest-ember-i18n/node_modules/ember-i18n/addon/config/hi.js":"import { ONE, OTHER } from \"./constants\";\n\nexport default {\n  rtl: false,\n\n  pluralForm(n) {\n    if (n === 0) { return ONE; }\n    if (n === 1) { return ONE; }\n    return OTHER;\n  }\n};\n","/home/travis/build/npmtest/node-npmtest-ember-i18n/node_modules/ember-i18n/addon/config/it.js":"import en from './en';\nexport default en;\n","/home/travis/build/npmtest/node-npmtest-ember-i18n/node_modules/ember-i18n/addon/config/iw.js":"import he from \"./he\";\nexport default he;\n","/home/travis/build/npmtest/node-npmtest-ember-i18n/node_modules/ember-i18n/addon/config/ja.js":"import zh from './zh';\nexport default zh;\n","/home/travis/build/npmtest/node-npmtest-ember-i18n/node_modules/ember-i18n/addon/config/jv.js":"import zh from './zh';\nexport default zh;\n","/home/travis/build/npmtest/node-npmtest-ember-i18n/node_modules/ember-i18n/addon/config/ko.js":"import zh from './zh';\nexport default zh;\n","/home/travis/build/npmtest/node-npmtest-ember-i18n/node_modules/ember-i18n/addon/config/mr.js":"import en from './en';\nexport default en;\n","/home/travis/build/npmtest/node-npmtest-ember-i18n/node_modules/ember-i18n/addon/config/ms.js":"import zh from './zh';\nexport default zh;\n","/home/travis/build/npmtest/node-npmtest-ember-i18n/node_modules/ember-i18n/addon/config/nl.js":"import en from './en';\nexport default en;\n","/home/travis/build/npmtest/node-npmtest-ember-i18n/node_modules/ember-i18n/addon/config/no.js":"import en from './en';\nexport default en;\n","/home/travis/build/npmtest/node-npmtest-ember-i18n/node_modules/ember-i18n/addon/config/pa.js":"import en from './en';\nexport default en;\n","/home/travis/build/npmtest/node-npmtest-ember-i18n/node_modules/ember-i18n/addon/config/pl.js":"import { ONE, FEW, MANY, OTHER } from './constants';\n\nexport default {\n  rtl: false,\n\n  pluralForm(n) {\n    const mod1 = n % 1;\n    const mod10 = n % 10;\n    const mod100 = n % 100;\n\n    if (n === 1) { return ONE; }\n    if (mod1 === 0 && (mod10 >= 2 && mod10 <= 4) && !(mod100 >= 12 && mod100 <= 14)) { return FEW; }\n    if (mod1 === 0 && (mod10 === 0 || mod10 === 1 || (mod10 >= 5 && mod10 <= 9) || (mod100 >= 12 && mod100 <= 14))) { return MANY; }\n    return OTHER;\n  }\n};\n","/home/travis/build/npmtest/node-npmtest-ember-i18n/node_modules/ember-i18n/addon/config/pt.js":"import en from './en';\nexport default en;\n","/home/travis/build/npmtest/node-npmtest-ember-i18n/node_modules/ember-i18n/addon/config/ru.js":"import { ONE, FEW, MANY, OTHER } from './constants';\n\nexport default {\n  rtl: false,\n\n  pluralForm(n) {\n    const mod1 = n % 1;\n    const mod10 = n % 10;\n    const mod100 = n % 100;\n\n    if (mod10 === 1 && mod100 !== 11) { return ONE; }\n    if (mod1 === 0 && (mod10 >= 2 && mod10 <= 4) && !(mod100 >= 12 && mod100 <= 14)) { return FEW; }\n    if (mod1 === 0 && (mod10 === 0 || (mod10 >= 5 && mod10 <= 9) || (mod100 >= 11 && mod100 <= 14))) { return MANY; }\n    return OTHER;\n  }\n};\n","/home/travis/build/npmtest/node-npmtest-ember-i18n/node_modules/ember-i18n/addon/config/sv.js":"import en from './en';\nexport default en;\n","/home/travis/build/npmtest/node-npmtest-ember-i18n/node_modules/ember-i18n/addon/config/ta.js":"import en from './en';\nexport default en;\n","/home/travis/build/npmtest/node-npmtest-ember-i18n/node_modules/ember-i18n/addon/config/te.js":"import en from './en';\nexport default en;\n","/home/travis/build/npmtest/node-npmtest-ember-i18n/node_modules/ember-i18n/addon/config/tr.js":"import { ONE } from './constants';\n\nexport default {\n  rtl: false,\n\n  pluralForm() /* n */{\n    return ONE;\n  }\n};\n","/home/travis/build/npmtest/node-npmtest-ember-i18n/node_modules/ember-i18n/addon/config/ur.js":"import en from './en';\nexport default en;\n","/home/travis/build/npmtest/node-npmtest-ember-i18n/node_modules/ember-i18n/addon/config/vi.js":"import zh from './zh';\nexport default zh;\n","/home/travis/build/npmtest/node-npmtest-ember-i18n/node_modules/ember-i18n/addon/config/zh.js":"import { OTHER } from './constants';\n\nexport default {\n  rtl: false,\n\n  pluralForm() /* n */{\n    return OTHER;\n  }\n};\n","/home/travis/build/npmtest/node-npmtest-ember-i18n/node_modules/ember-i18n/addon/initializers/ember-i18n.js":"// As of 4.3.0 using the ember-i18n initializer is no longer necessary.\n//\n// This is a no-op initializer to prevent applications that relied on the\n// 'ember-i18n' initializer in their own workflow from breaking.\nexport default {\n  name: 'ember-i18n',\n  initialize() {\n    // No-op.\n  }\n};\n","/home/travis/build/npmtest/node-npmtest-ember-i18n/node_modules/ember-i18n/addon/instance-initializers/ember-i18n.js":"// As of 4.3.0 using the ember-i18n instance initializer is no longer\n// necessary.\n//\n// This is a no-op initializer to prevent applications that relied on the\n// 'ember-i18n' instance initializer in their own workflow from breaking.\nexport default {\n  name: 'ember-i18n',\n  initialize() {\n    // No-op.\n  }\n};\n","/home/travis/build/npmtest/node-npmtest-ember-i18n/node_modules/ember-i18n/addon/legacy/helper.js":"import Stream from \"./stream\";\nimport { readHash } from \"./stream\";\nimport Ember from 'ember';\n\nconst assign = Ember.assign || Ember.merge;\n\nexport default function tHelper([i18nKey, contextObject = { value: () => {} }], hash, options, env) {\n  const i18n = env.data.view.container.lookup('service:i18n');\n\n\n\n  var out = new Stream(function() {\n    const value = i18nKey.isStream ? i18nKey.value() : i18nKey;\n\n    const contextObjectValue = contextObject.value();\n    const mergedHash = {};\n    assign(mergedHash, contextObjectValue);\n    assign(mergedHash, hash);\n\n    return value === undefined ? '' : i18n.t(value, readHash(mergedHash));\n  });\n\n  // Once the view is destroyed destroy the steam as well\n  env.data.view.one('willDestroyElement', out, function() {\n    this.destroy();\n  });\n\n  if (contextObject && contextObject.isStream) {\n    contextObject.subscribe(out.notify, out);\n  }\n\n  // observe any hash arguments that are streams:\n  Object.keys(hash).forEach(function(key) {\n    const value = hash[key];\n\n    if (value && value.isStream) {\n      value.subscribe(out.notify, out);\n    }\n  });\n\n  // observe the locale:\n  i18n.localeStream.subscribe(out.notify, out);\n\n  // if the i18n key itself is dynamic, observe it:\n  if (i18nKey.isStream) {\n    i18nKey.subscribe(out.notify, out);\n  }\n\n  return out;\n}\n","/home/travis/build/npmtest/node-npmtest-ember-i18n/node_modules/ember-i18n/addon/legacy/initializer.js":"import Ember from \"ember\";\nimport Stream from './stream';\nimport legacyHelper from \"./helper\";\n\n// Used for Ember < 1.13\nexport default {\n  name: 'ember-i18n-legacy-helper',\n\n  initialize(registry) {\n    const i18n = registry.lookup('service:i18n');\n\n    i18n.localeStream = new Stream(function() {\n      return i18n.get('locale');\n    });\n\n    Ember.addObserver(i18n, 'locale', i18n, function() {\n      this.localeStream.value(); // force the stream to be dirty\n      this.localeStream.notify();\n    });\n\n    Ember.HTMLBars._registerHelper('t', legacyHelper);\n  }\n};\n","/home/travis/build/npmtest/node-npmtest-ember-i18n/node_modules/ember-i18n/addon/legacy/stream.js":"import Ember from 'ember';\n\n// As of v1.12, Streams are still private API. Thus, we need to reach in to\n// Ember internals to get access to it.\n//\n// See https://github.com/emberjs/ember.js/blob/v1.12.0/packages/ember-metal/lib/main.js#L384-L386\n// See https://github.com/emberjs/ember.js/pull/9693\n// See https://github.com/dockyard/ember-cli-i18n/blob/v0.0.6/addon/utils/stream.js\n\nexport default Ember.__loader.require('ember-metal/streams/stream')['default'];\nexport const readHash = Ember.__loader.require('ember-metal/streams/utils').readHash;\n","/home/travis/build/npmtest/node-npmtest-ember-i18n/node_modules/ember-i18n/addon/services/i18n.js":"import Ember from \"ember\";\nimport Locale from \"../utils/locale\";\nimport addTranslations from \"../utils/add-translations\";\nimport getLocales from \"../utils/get-locales\";\n\nconst { assert, computed, get, Evented, makeArray, on, typeOf, warn, getOwner } = Ember;\nconst Parent = Ember.Service || Ember.Object;\n\n// @public\nexport default Parent.extend(Evented, {\n  // @public\n  // The user's locale.\n  locale: null,\n\n  // @public\n  // A list of found locales.\n  locales: computed(getLocales),\n\n  // @public\n  //\n  // Returns the translation `key` interpolated with `data`\n  // in the current `locale`.\n  t(key, data = {}) {\n    Ember.deprecate('locale is a reserved attribute', data['locale'] === undefined, {\n      id: 'ember-i18n.reserve-locale',\n      until: '5.0.0'\n    });\n\n    Ember.deprecate('htmlSafe is a reserved attribute', data['htmlSafe'] === undefined, {\n      id: 'ember-i18n.reserve-htmlSafe',\n      until: '5.0.0'\n    });\n\n    const locale = this.get('_locale');\n    assert(\"I18n: Cannot translate when locale is null\", locale);\n    const count = get(data, 'count');\n\n    const defaults = makeArray(get(data, 'default'));\n\n    defaults.unshift(key);\n    const template = locale.getCompiledTemplate(defaults, count);\n\n    if (template._isMissing) {\n      this.trigger('missing', this.get('locale'), key, data);\n    }\n\n    return template(data);\n  },\n\n  // @public\n  exists(key, data = {}) {\n    const locale = this.get('_locale');\n    assert(\"I18n: Cannot check existance when locale is null\", locale);\n    const count = get(data, 'count');\n\n    const translation = locale.findTranslation(makeArray(key), count);\n    return typeOf(translation.result) !== 'undefined' && !translation.result._isMissing;\n  },\n\n  // @public\n  addTranslations(locale, translations) {\n    addTranslations(locale, translations, getOwner(this));\n    this._addLocale(locale);\n\n    if (this.get('locale').indexOf(locale) === 0) {\n      this.get('_locale').rebuild();\n    }\n  },\n\n  // @private\n  _initDefaults: on('init', function() {\n    let owner = getOwner(this);\n    let ENV = owner.factoryFor('config:environment').class;\n\n    if (this.get('locale') == null) {\n      var defaultLocale = (ENV.i18n || {}).defaultLocale;\n      if (defaultLocale == null) {\n        warn('ember-i18n did not find a default locale; falling back to \"en\".', false, {\n          id: 'ember-i18n.default-locale'\n        });\n\n        defaultLocale = 'en';\n      }\n      this.set('locale', defaultLocale);\n    }\n  }),\n\n  // @private\n  //\n  // adds a runtime locale to the array of locales on disk\n  _addLocale(locale) {\n    this.get('locales').addObject(locale);\n  },\n\n  _locale: computed('locale', function() {\n    const locale = this.get('locale');\n\n    return locale ? new Locale(this.get('locale'), getOwner(this)) : null;\n  })\n});\n","/home/travis/build/npmtest/node-npmtest-ember-i18n/node_modules/ember-i18n/addon/utils/add-translations.js":"import Ember from \"ember\";\n\nconst assign = Ember.assign || Ember.merge;\n\nexport default function addTranslations(locale, newTranslations, owner) {\n  const key = `locale:${locale}/translations`;\n  let factory = owner.factoryFor(key);\n  let existingTranslations = factory && factory.class;\n\n  if (existingTranslations == null) {\n    existingTranslations = {};\n    owner.register(key, existingTranslations);\n  }\n\n  assign(existingTranslations, newTranslations);\n}\n","/home/travis/build/npmtest/node-npmtest-ember-i18n/node_modules/ember-i18n/addon/utils/get-locales.js":"import Ember from 'ember';\n\nconst matchKey = '/locales/(.+)/translations$';\n\nexport default function getLocales() {\n  return Object.keys(requirejs.entries)\n    .reduce((locales, module) => {\n      var match = module.match(matchKey);\n      if (match) {\n        locales.pushObject(match[1]);\n      }\n      return locales;\n    }, Ember.A())\n    .sort();\n}\n","/home/travis/build/npmtest/node-npmtest-ember-i18n/node_modules/ember-i18n/addon/utils/locale.js":"import Ember from \"ember\";\nconst { assert, typeOf, warn } = Ember;\nconst assign = Ember.assign || Ember.merge;\n\n// @private\n//\n// This class is the work-horse of localization look-up.\nfunction Locale(id, owner) {\n  // On Construction:\n  //  1. look for translations in the locale (e.g. pt-BR) and all parent\n  //     locales (e.g. pt), flatten any nested keys, and then merge them.\n  //  2. walk through the configs from most specific to least specific\n  //     and use the first value for `rtl` and `pluralForm`\n  //  3. Default `rtl` to `false`\n  //  4. Ensure `pluralForm` is defined\n  this.id = id;\n  this.owner = owner;\n  this.rebuild();\n}\n\nLocale.prototype = {\n  rebuild() {\n    this.translations = getFlattenedTranslations(this.id, this.owner);\n    this._setConfig();\n  },\n\n  _setConfig() {\n    walkConfigs(this.id, this.owner, (config) => {\n      if (this.rtl === undefined) { this.rtl = config.rtl; }\n      if (this.pluralForm === undefined) { this.pluralForm = config.pluralForm; }\n    });\n\n    // Exit early if we already have an RTL and pluralForm config set\n    if (this.rtl !== undefined && this.pluralForm !== undefined) {\n      return;\n    }\n\n    let defaultConfigFactory = this.owner.factoryFor('ember-i18n@config:zh');\n    let defaultConfig = defaultConfigFactory ? defaultConfigFactory.class : null;\n\n    if (this.rtl === undefined) {\n      warn(`ember-i18n: No RTL configuration found for ${this.id}.`, false, { id: 'ember-i18n.no-rtl-configuration' });\n      this.rtl = defaultConfig.rtl;\n    }\n\n    if (this.pluralForm === undefined) {\n      warn(`ember-i18n: No pluralForm configuration found for ${this.id}.`, false, { id: 'ember-i18n.no-plural-form' });\n      this.pluralForm = defaultConfig.pluralForm;\n    }\n  },\n\n  getCompiledTemplate(fallbackChain, count) {\n    let translation = this.findTranslation(fallbackChain, count);\n    let result = translation.result;\n\n    if (typeOf(result) === 'string') {\n      result = this._compileTemplate(translation.key, result);\n    }\n\n    if (result == null) {\n      result = this._defineMissingTranslationTemplate(fallbackChain[0]);\n    }\n\n    assert(`Template for ${translation.key} in ${this.id} is not a function`, typeOf(result) === 'function');\n\n    return result;\n  },\n\n  findTranslation(fallbackChain, count) {\n    if (this.translations === undefined) { this._init(); }\n\n    let result;\n    let i;\n    for (i = 0; i < fallbackChain.length; i++) {\n      let key = fallbackChain[i];\n      if (count != null) {\n        const inflection = this.pluralForm(+count);\n        result = this.translations[`${key}.${inflection}`];\n      }\n\n      if (result == null) {\n        result = this.translations[key];\n      }\n\n      if (result) {\n        break;\n      }\n    }\n\n    return {\n      key: fallbackChain[i],\n      result: result\n    };\n  },\n\n  _defineMissingTranslationTemplate(key) {\n    const i18n = this.owner.lookup('service:i18n');\n    const locale = this.id;\n    let missingMessage = this.owner.factoryFor('util:i18n/missing-message').class;\n\n    function missingTranslation(data) { return missingMessage.call(i18n, locale, key, data); }\n\n    missingTranslation._isMissing = true;\n    this.translations[key] = missingTranslation;\n    return missingTranslation;\n  },\n\n  _compileTemplate(key, string) {\n    let compile = this.owner.factoryFor('util:i18n/compile-template').class;\n    const template = compile(string, this.rtl);\n    this.translations[key] = template;\n    return template;\n  }\n};\n\nfunction getFlattenedTranslations(id, owner) {\n  const result = {};\n\n  const parentId = parentLocale(id);\n  if (parentId) {\n    assign(result, getFlattenedTranslations(parentId, owner));\n  }\n\n  let factory = owner.factoryFor(`locale:${id}/translations`);\n  let translations = factory && factory.class;\n  assign(result, withFlattenedKeys(translations || {}));\n\n  return result;\n}\n\n// Walk up confiugration objects from most specific to least.\nfunction walkConfigs(id, owner, fn) {\n  let maybeAppConfig = owner.factoryFor(`locale:${id}/config`);\n  let appConfig = maybeAppConfig && maybeAppConfig.class;\n  if (appConfig) { fn(appConfig); }\n\n  let maybeAddonConfig = owner.factoryFor(`ember-i18n@config:${id}`);\n  let addonConfig = maybeAddonConfig && maybeAddonConfig.class;\n  if (addonConfig) { fn(addonConfig); }\n\n  const parentId = parentLocale(id);\n  if (parentId) { walkConfigs(parentId, owner, fn); }\n}\n\nfunction parentLocale(id) {\n  const lastDash = id.lastIndexOf('-');\n  return lastDash > 0 ? id.substr(0, lastDash) : null;\n}\n\nfunction withFlattenedKeys(object) {\n  const result = {};\n\n  Object.keys(object).forEach(function(key) {\n    var value = object[key];\n\n    if (typeOf(value) === 'object') {\n      value = withFlattenedKeys(value);\n\n      Object.keys(value).forEach(function(suffix) {\n        result[`${key}.${suffix}`] = value[suffix];\n      });\n    } else {\n      result[key] = value;\n    }\n  });\n\n  return result;\n}\n\nexport default Locale;\n","/home/travis/build/npmtest/node-npmtest-ember-i18n/node_modules/ember-i18n/addon/utils/macro.js":"import Ember from \"ember\";\n\nconst keys = Object.keys;\nconst get = Ember.get;\n\n// @public\nexport default function createTranslatedComputedProperty(key, interpolations = {}) {\n  const dependencies = [ 'i18n.locale' ].concat(values(interpolations));\n\n  return Ember.computed(...dependencies, function() {\n    const i18n = get(this, 'i18n');\n    Ember.assert(`Cannot translate ${key}. ${this} does not have an i18n.`, i18n);\n    return i18n.t(key, mapPropertiesByHash(this, interpolations));\n  });\n}\n\nfunction values(object) {\n  return keys(object).map((key) => object[key]);\n}\n\nfunction mapPropertiesByHash(object, hash) {\n  const result = {};\n\n  keys(hash).forEach(function(key) {\n    result[key] = get(object, hash[key]);\n  });\n\n  return result;\n}\n","/home/travis/build/npmtest/node-npmtest-ember-i18n/node_modules/ember-i18n/app/helpers/t.js":"export { default } from 'ember-i18n/helper';\n","/home/travis/build/npmtest/node-npmtest-ember-i18n/node_modules/ember-i18n/app/initializers/ember-i18n.js":"import initializer from 'ember-i18n/initializers/ember-i18n';\nexport default initializer;\n","/home/travis/build/npmtest/node-npmtest-ember-i18n/node_modules/ember-i18n/app/initializers/ember-i18n-legacy-helper.js":"import initializer from 'ember-i18n/legacy/initializer';\nexport default initializer;\n","/home/travis/build/npmtest/node-npmtest-ember-i18n/node_modules/ember-i18n/app/instance-initializers/ember-i18n.js":"import initializer from 'ember-i18n/instance-initializers/ember-i18n';\nexport default initializer;\n","/home/travis/build/npmtest/node-npmtest-ember-i18n/node_modules/ember-i18n/app/services/i18n.js":"export { default } from 'ember-i18n/services/i18n';","/home/travis/build/npmtest/node-npmtest-ember-i18n/node_modules/ember-i18n/addon/utils/i18n/compile-template.js":"import Ember from \"ember\";\n\nconst htmlSafe = Ember.String.htmlSafe;\nconst get = Ember.get;\nconst escapeExpression = Ember.Handlebars.Utils.escapeExpression;\nconst tripleStache = /\\{\\{\\{\\s*(.*?)\\s*\\}\\}\\}/g;\nconst doubleStache = /\\{\\{\\s*(.*?)\\s*\\}\\}/g;\n\n// @public\n//\n// Compile a translation template.\n//\n// To override this, define `util:i18n/compile-template` with\n// the signature\n// `Function(String, Boolean) -> Function(Object) -> String`.\nexport default function compileTemplate(template, rtl = false) {\n  return function renderTemplate(data) {\n    const result = template\n      .replace(tripleStache, (i, match) => get(data, match))\n      .replace(doubleStache, (i, match) => escapeExpression(get(data, match)));\n\n    const wrapped = rtl ? `\\u202B${result}\\u202C` : result;\n\n    return htmlSafe(wrapped);\n  };\n}\n","/home/travis/build/npmtest/node-npmtest-ember-i18n/node_modules/ember-i18n/addon/utils/i18n/missing-message.js":"// @public\n//\n// Generate a \"missing template\" message that will be used\n// as a translation.\n//\n// To override this, define `util:i18n/missing-message` with\n// the signature\n//\n// `Function(String, String, Object) -> String`.\nexport default function missingMessage(locale, key /*, data */) {\n  return `Missing translation: ${key}`;\n}\n","/home/travis/build/npmtest/node-npmtest-ember-i18n/node_modules/ember-i18n/app/utils/i18n/compile-template.js":"export { default } from 'ember-i18n/utils/i18n/compile-template';","/home/travis/build/npmtest/node-npmtest-ember-i18n/node_modules/ember-i18n/app/utils/i18n/missing-message.js":"export { default } from 'ember-i18n/utils/i18n/missing-message';"}